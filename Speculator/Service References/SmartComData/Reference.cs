//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Speculator.SmartComData {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartComData.ISmartComData")]
    public interface ISmartComData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartComData/ConnectToSmartCom", ReplyAction="http://tempuri.org/ISmartComData/ConnectToSmartComResponse")]
        void ConnectToSmartCom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISmartComData/ConnectToSmartCom", ReplyAction="http://tempuri.org/ISmartComData/ConnectToSmartComResponse")]
        System.Threading.Tasks.Task ConnectToSmartComAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISmartComDataChannel : Speculator.SmartComData.ISmartComData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SmartComDataClient : System.ServiceModel.ClientBase<Speculator.SmartComData.ISmartComData>, Speculator.SmartComData.ISmartComData {
        
        public SmartComDataClient() {
        }
        
        public SmartComDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SmartComDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartComDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SmartComDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ConnectToSmartCom() {
            base.Channel.ConnectToSmartCom();
        }
        
        public System.Threading.Tasks.Task ConnectToSmartComAsync() {
            return base.Channel.ConnectToSmartComAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmartComData.IDataBase", CallbackContract=typeof(Speculator.SmartComData.IDataBaseCallback))]
    public interface IDataBase {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase/ListenSymbol", ReplyAction="http://tempuri.org/IDataBase/ListenSymbolResponse")]
        void ListenSymbol(SpeculatorModel.MainData.Symbol symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataBase/ListenSymbol", ReplyAction="http://tempuri.org/IDataBase/ListenSymbolResponse")]
        System.Threading.Tasks.Task ListenSymbolAsync(SpeculatorModel.MainData.Symbol symbol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataBaseCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDataBase/UpdateAskEvent")]
        void UpdateAskEvent();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDataBase/UpdateBidEvent")]
        void UpdateBidEvent();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataBaseChannel : Speculator.SmartComData.IDataBase, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataBaseClient : System.ServiceModel.DuplexClientBase<Speculator.SmartComData.IDataBase>, Speculator.SmartComData.IDataBase {
        
        public DataBaseClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DataBaseClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DataBaseClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DataBaseClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DataBaseClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ListenSymbol(SpeculatorModel.MainData.Symbol symbol) {
            base.Channel.ListenSymbol(symbol);
        }
        
        public System.Threading.Tasks.Task ListenSymbolAsync(SpeculatorModel.MainData.Symbol symbol) {
            return base.Channel.ListenSymbolAsync(symbol);
        }
    }
}
